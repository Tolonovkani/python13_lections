# 1) '''Магическими называются даты, в которых произведение дня и месяца составляет последние две цифры года. Например, 10 июня 1960 года – магическая дата, поскольку 10 ´ 6 = 60. Напишите функцию, определя- ющую, является ли введенная дата магической. Используйте написан-ную функцию в главной программе для отображения всех магических дат в XX ве­к
	


# ==========================================
# 2) '''Напишите функцию для определения количества дней в конкретном месяце. Ваша функция должна принимать два параметра: номер месяцав виде целого числа в диапазоне от 1 до 12 и год, состоящий из четырехцифр. Убедитесь, что функция корректно обрабатывает февраль високосного года. В основной программе запросите у пользователя номер месяца и год и отобразите на экране количество дней в указанном месяце.'''

# def days_():
#     days = list(input('Введите месяц и год: ').split())
#     year = str(days[-1])
#     visokos = any(map(lambda x: True if int(x) > 0 and int(x) % 4 == 0 or int(x) % 400 == 0 and int(x) % 200 != 0 else False, year))
#     d = 0
#     if days[0] == '1' or days[0] == '3' or days[0] == '5' or days[0] == '7' or days[0] == '8' or days[0] == '10' or days[0] == '12':
#         d = 31
#     elif days[0] == '4' or days[0] == '6' or days[0] == '9' or days[0] == '11':
#         d == 30
#     elif days[0] == '2' and visokos == True:
#         d = 29 
#     elif days[0] == '2' and visokos != True:
#         d = 28
#     else:
#         return 'Вы ввели неправильную дату'
#     return f'количество дней: {d}'
    
# print(days_())
# ===================================
# 3) '''Напишите две функции с именами hex2int и int2hex для конвертации
# значений из шестнадцатеричной системы счисления (0, 1, 2, 3, 4, 5, 6, 7,
# 8, 9, A, B, C, D, E и F) в десятичную (по основанию 10) и обратно. Функ-
# ция hex2int должна принимать на вход строку с единственным символом
# в шестнадцатеричной системе и преобразовывать его в число от нуля
# до 15 в десятичной системе, тогда как функция int2hex будет выполнять
# обратное действие – принимать десятичное число из диапазона от 0 до
# 15 и возвращать шестнадцатеричный эквивалент. Обе функции должны
# принимать единственный параметр со входным значением и возвращать
# преобразованное число. Удостоверьтесь, что функция hex2int корректно
# обрабатывает буквы в верхнем и нижнем регистрах. Если введенное поль-
# зователем значение выходит за допустимые границы, вы должны вывести
# сообщение об ошибке.'

# =======================================================
# 4) '''Представьте, что в вашем регионе устаревшим является формат номер-
# ных автомобильных знаков из трех букв, следом за которыми идут три
# цифры. Когда все номера такого шаблона закончились, было решено об-
# новить формат, поставив в начало четыре цифры, а за ними три буквы.
# Напишите функцию, которая будет генерировать случайный номерной
# знак. При этом номера в старом и новом форматах должны создаваться
# примерно с одинаковой вероятностью. В основной программе нужно сге-
# нерировать и вывести на экран случайный номерной знак.''
# import random

# a = random.randint(1000,9999)
# b = random.choice('poiuytrewqlkjhgfdsanbvcxz')
# c = random.choice('poiuytrewqlkjhgfdsanbvcxz')
# print(b, a, c)


# def nomer(format: str = 'novyi'):
#     a = random.randint(1000,9999)
#     b = ''
#     for _ in range(3):
#         b += random.choice('poiuytrewqlkjhgfdsanbvcxz')
#     # if format == 'novyi':
#         # return f'{a} {b}'
#     return f'staryi: {b} {str(a)[0:-1]}\nnovyi: {a} {b}'


# print(nomer())
